{"ast":null,"code":"'use strict';\n\nvar jsonStringify = (typeof JSON !== 'undefined' ? JSON : require('jsonify')).stringify;\nvar isArray = require('isarray');\nvar objectKeys = require('object-keys');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar $join = callBound('Array.prototype.join');\nvar $push = callBound('Array.prototype.push');\nvar strRepeat = function repeat(n, char) {\n  var str = '';\n  for (var i = 0; i < n; i += 1) {\n    str += char;\n  }\n  return str;\n};\nvar defaultReplacer = function (parent, key, value) {\n  return value;\n};\nmodule.exports = function stableStringify(obj) {\n  var opts = arguments.length > 1 ? arguments[1] : void undefined;\n  var space = opts && opts.space || '';\n  if (typeof space === 'number') {\n    space = strRepeat(space, ' ');\n  }\n  var cycles = !!opts && typeof opts.cycles === 'boolean' && opts.cycles;\n  var replacer = opts && opts.replacer ? callBind(opts.replacer) : defaultReplacer;\n  var cmpOpt = typeof opts === 'function' ? opts : opts && opts.cmp;\n  var cmp = cmpOpt && function (node) {\n    var get = cmpOpt.length > 2 && function get(k) {\n      return node[k];\n    };\n    return function (a, b) {\n      return cmpOpt({\n        key: a,\n        value: node[a]\n      }, {\n        key: b,\n        value: node[b]\n      }, get ? {\n        __proto__: null,\n        get: get\n      } : void undefined);\n    };\n  };\n  var seen = [];\n  return function stringify(parent, key, node, level) {\n    var indent = space ? '\\n' + strRepeat(level, space) : '';\n    var colonSeparator = space ? ': ' : ':';\n    if (node && node.toJSON && typeof node.toJSON === 'function') {\n      node = node.toJSON();\n    }\n    node = replacer(parent, key, node);\n    if (node === undefined) {\n      return;\n    }\n    if (typeof node !== 'object' || node === null) {\n      return jsonStringify(node);\n    }\n    if (isArray(node)) {\n      var out = [];\n      for (var i = 0; i < node.length; i++) {\n        var item = stringify(node, i, node[i], level + 1) || jsonStringify(null);\n        $push(out, indent + space + item);\n      }\n      return '[' + $join(out, ',') + indent + ']';\n    }\n    if (seen.indexOf(node) !== -1) {\n      if (cycles) {\n        return jsonStringify('__cycle__');\n      }\n      throw new TypeError('Converting circular structure to JSON');\n    } else {\n      $push(seen, node);\n    }\n    var keys = objectKeys(node).sort(cmp && cmp(node));\n    var out = [];\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = stringify(node, key, node[key], level + 1);\n      if (!value) {\n        continue;\n      }\n      var keyValue = jsonStringify(key) + colonSeparator + value;\n      $push(out, indent + space + keyValue);\n    }\n    seen.splice(seen.indexOf(node), 1);\n    return '{' + $join(out, ',') + indent + '}';\n  }({\n    '': obj\n  }, '', obj, 0);\n};","map":{"version":3,"names":["jsonStringify","JSON","require","stringify","isArray","objectKeys","callBind","callBound","$join","$push","strRepeat","repeat","n","char","str","i","defaultReplacer","parent","key","value","module","exports","stableStringify","obj","opts","arguments","length","undefined","space","cycles","replacer","cmpOpt","cmp","node","get","k","a","b","__proto__","seen","level","indent","colonSeparator","toJSON","out","item","indexOf","TypeError","keys","sort","keyValue","splice"],"sources":["/Users/cpereira/Documents/GIT/Neo/neovest/neovest/node_modules/json-stable-stringify/index.js"],"sourcesContent":["'use strict';\n\nvar jsonStringify = (typeof JSON !== 'undefined' ? JSON : require('jsonify')).stringify;\n\nvar isArray = require('isarray');\nvar objectKeys = require('object-keys');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\n\nvar $join = callBound('Array.prototype.join');\nvar $push = callBound('Array.prototype.push');\n\nvar strRepeat = function repeat(n, char) {\n\tvar str = '';\n\tfor (var i = 0; i < n; i += 1) {\n\t\tstr += char;\n\t}\n\treturn str;\n};\n\nvar defaultReplacer = function (parent, key, value) { return value; };\n\nmodule.exports = function stableStringify(obj) {\n\tvar opts = arguments.length > 1 ? arguments[1] : void undefined;\n\tvar space = (opts && opts.space) || '';\n\tif (typeof space === 'number') { space = strRepeat(space, ' '); }\n\tvar cycles = !!opts && typeof opts.cycles === 'boolean' && opts.cycles;\n\tvar replacer = opts && opts.replacer ? callBind(opts.replacer) : defaultReplacer;\n\n\tvar cmpOpt = typeof opts === 'function' ? opts : opts && opts.cmp;\n\tvar cmp = cmpOpt && function (node) {\n\t\tvar get = cmpOpt.length > 2 && function get(k) { return node[k]; };\n\t\treturn function (a, b) {\n\t\t\treturn cmpOpt(\n\t\t\t\t{ key: a, value: node[a] },\n\t\t\t\t{ key: b, value: node[b] },\n\t\t\t\tget ? { __proto__: null, get: get } : void undefined\n\t\t\t);\n\t\t};\n\t};\n\n\tvar seen = [];\n\treturn (function stringify(parent, key, node, level) {\n\t\tvar indent = space ? '\\n' + strRepeat(level, space) : '';\n\t\tvar colonSeparator = space ? ': ' : ':';\n\n\t\tif (node && node.toJSON && typeof node.toJSON === 'function') {\n\t\t\tnode = node.toJSON();\n\t\t}\n\n\t\tnode = replacer(parent, key, node);\n\n\t\tif (node === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof node !== 'object' || node === null) {\n\t\t\treturn jsonStringify(node);\n\t\t}\n\t\tif (isArray(node)) {\n\t\t\tvar out = [];\n\t\t\tfor (var i = 0; i < node.length; i++) {\n\t\t\t\tvar item = stringify(node, i, node[i], level + 1) || jsonStringify(null);\n\t\t\t\t$push(out, indent + space + item);\n\t\t\t}\n\t\t\treturn '[' + $join(out, ',') + indent + ']';\n\t\t}\n\n\t\tif (seen.indexOf(node) !== -1) {\n\t\t\tif (cycles) { return jsonStringify('__cycle__'); }\n\t\t\tthrow new TypeError('Converting circular structure to JSON');\n\t\t} else { $push(seen, node); }\n\n\t\tvar keys = objectKeys(node).sort(cmp && cmp(node));\n\t\tvar out = [];\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar value = stringify(node, key, node[key], level + 1);\n\n\t\t\tif (!value) { continue; }\n\n\t\t\tvar keyValue = jsonStringify(key)\n\t\t\t\t+ colonSeparator\n\t\t\t\t+ value;\n\n\t\t\t$push(out, indent + space + keyValue);\n\t\t}\n\t\tseen.splice(seen.indexOf(node), 1);\n\t\treturn '{' + $join(out, ',') + indent + '}';\n\n\t}({ '': obj }, '', obj, 0));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}
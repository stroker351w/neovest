{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar helpers = require('web3-core-helpers');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Net = require('web3-net');\nvar ENS = require('web3-eth-ens');\nvar Personal = require('web3-eth-personal');\nvar BaseContract = require('web3-eth-contract');\nvar Iban = require('web3-eth-iban');\nvar Accounts = require('web3-eth-accounts');\nvar abi = require('web3-eth-abi');\nvar getNetworkType = require('./getNetworkType.js');\nvar formatter = helpers.formatters;\nvar blockCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\nvar transactionFromBlockCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\nvar uncleCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\nvar getBlockTransactionCountCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\nvar uncleCountCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\nvar Eth = function Eth() {\n  var _this = this;\n  // sets _requestmanager\n  core.packageInit(this, arguments);\n  // overwrite package setRequestManager\n  var setRequestManager = this.setRequestManager;\n  this.setRequestManager = function (manager) {\n    setRequestManager(manager);\n    _this.net.setRequestManager(manager);\n    _this.personal.setRequestManager(manager);\n    _this.accounts.setRequestManager(manager);\n    _this.Contract._requestManager = _this._requestManager;\n    _this.Contract.currentProvider = _this._provider;\n    return true;\n  };\n  // overwrite setProvider\n  var setProvider = this.setProvider;\n  this.setProvider = function () {\n    setProvider.apply(_this, arguments);\n    _this.setRequestManager(_this._requestManager);\n    // Set detectedAddress/lastSyncCheck back to null because the provider could be connected to a different chain now\n    _this.ens._detectedAddress = null;\n    _this.ens._lastSyncCheck = null;\n  };\n  var handleRevert = false;\n  var defaultAccount = null;\n  var defaultBlock = 'latest';\n  var transactionBlockTimeout = 50;\n  var transactionConfirmationBlocks = 24;\n  var transactionPollingTimeout = 750;\n  var maxListenersWarningThreshold = 100;\n  var defaultChain, defaultHardfork, defaultCommon;\n  Object.defineProperty(this, 'handleRevert', {\n    get: function () {\n      return handleRevert;\n    },\n    set: function (val) {\n      handleRevert = val;\n      // also set on the Contract object\n      _this.Contract.handleRevert = handleRevert;\n      // update handleRevert\n      methods.forEach(function (method) {\n        method.handleRevert = handleRevert;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultCommon', {\n    get: function () {\n      return defaultCommon;\n    },\n    set: function (val) {\n      defaultCommon = val;\n      // also set on the Contract object\n      _this.Contract.defaultCommon = defaultCommon;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.defaultCommon = defaultCommon;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultHardfork', {\n    get: function () {\n      return defaultHardfork;\n    },\n    set: function (val) {\n      defaultHardfork = val;\n      // also set on the Contract object\n      _this.Contract.defaultHardfork = defaultHardfork;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.defaultHardfork = defaultHardfork;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultChain', {\n    get: function () {\n      return defaultChain;\n    },\n    set: function (val) {\n      defaultChain = val;\n      // also set on the Contract object\n      _this.Contract.defaultChain = defaultChain;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.defaultChain = defaultChain;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionPollingTimeout', {\n    get: function () {\n      return transactionPollingTimeout;\n    },\n    set: function (val) {\n      transactionPollingTimeout = val;\n      // also set on the Contract object\n      _this.Contract.transactionPollingTimeout = transactionPollingTimeout;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.transactionPollingTimeout = transactionPollingTimeout;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionConfirmationBlocks', {\n    get: function () {\n      return transactionConfirmationBlocks;\n    },\n    set: function (val) {\n      transactionConfirmationBlocks = val;\n      // also set on the Contract object\n      _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionBlockTimeout', {\n    get: function () {\n      return transactionBlockTimeout;\n    },\n    set: function (val) {\n      transactionBlockTimeout = val;\n      // also set on the Contract object\n      _this.Contract.transactionBlockTimeout = transactionBlockTimeout;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.transactionBlockTimeout = transactionBlockTimeout;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n      }\n      // also set on the Contract object\n      _this.Contract.defaultAccount = defaultAccount;\n      _this.personal.defaultAccount = defaultAccount;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val;\n      // also set on the Contract object\n      _this.Contract.defaultBlock = defaultBlock;\n      _this.personal.defaultBlock = defaultBlock;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'maxListenersWarningThreshold', {\n    get: function () {\n      return maxListenersWarningThreshold;\n    },\n    set: function (val) {\n      if (_this.currentProvider && _this.currentProvider.setMaxListeners) {\n        maxListenersWarningThreshold = val;\n        _this.currentProvider.setMaxListeners(val);\n      }\n    },\n    enumerable: true\n  });\n  this.clearSubscriptions = _this._requestManager.clearSubscriptions.bind(_this._requestManager);\n  // add net\n  this.net = new Net(this);\n  // add chain detection\n  this.net.getNetworkType = getNetworkType.bind(this);\n  // add accounts\n  this.accounts = new Accounts(this);\n  // add personal\n  this.personal = new Personal(this);\n  this.personal.defaultAccount = this.defaultAccount;\n  // set warnings threshold\n  this.maxListenersWarningThreshold = maxListenersWarningThreshold;\n  // create a proxy Contract type for this instance, as a Contract's provider\n  // is stored as a class member rather than an instance variable. If we do\n  // not create this proxy type, changing the provider in one instance of\n  // web3-eth would subsequently change the provider for _all_ contract\n  // instances!\n  var self = this;\n  var Contract = function Contract() {\n    BaseContract.apply(this, arguments);\n    // when Eth.setProvider is called, call packageInit\n    // on all contract instances instantiated via this Eth\n    // instances. This will update the currentProvider for\n    // the contract instances\n    var _this = this;\n    var setProvider = self.setProvider;\n    self.setProvider = function () {\n      setProvider.apply(self, arguments);\n      core.packageInit(_this, [self]);\n    };\n  };\n  Contract.setProvider = function () {\n    BaseContract.setProvider.apply(this, arguments);\n  };\n  // make our proxy Contract inherit from web3-eth-contract so that it has all\n  // the right functionality and so that instanceof and friends work properly\n  Contract.prototype = Object.create(BaseContract.prototype);\n  Contract.prototype.constructor = Contract;\n  // add contract\n  this.Contract = Contract;\n  this.Contract.defaultAccount = this.defaultAccount;\n  this.Contract.defaultBlock = this.defaultBlock;\n  this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n  this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n  this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n  this.Contract.handleRevert = this.handleRevert;\n  this.Contract._requestManager = this._requestManager;\n  this.Contract._ethAccounts = this.accounts;\n  this.Contract.currentProvider = this._requestManager.provider;\n  // add IBAN\n  this.Iban = Iban;\n  // add ABI\n  this.abi = abi;\n  // add ENS\n  this.ens = new ENS(this);\n  var methods = [new Method({\n    name: 'getNodeInfo',\n    call: 'web3_clientVersion'\n  }), new Method({\n    name: 'getProtocolVersion',\n    call: 'eth_protocolVersion',\n    params: 0\n  }), new Method({\n    name: 'getCoinbase',\n    call: 'eth_coinbase',\n    params: 0\n  }), new Method({\n    name: 'isMining',\n    call: 'eth_mining',\n    params: 0\n  }), new Method({\n    name: 'getHashrate',\n    call: 'eth_hashrate',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'isSyncing',\n    call: 'eth_syncing',\n    params: 0,\n    outputFormatter: formatter.outputSyncingFormatter\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0,\n    outputFormatter: formatter.outputBigNumberFormatter\n  }), new Method({\n    name: 'getAccounts',\n    call: 'eth_accounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'getBlockNumber',\n    call: 'eth_blockNumber',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getBalance',\n    call: 'eth_getBalance',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: formatter.outputBigNumberFormatter\n  }), new Method({\n    name: 'getStorageAt',\n    call: 'eth_getStorageAt',\n    params: 3,\n    inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n  }), new Method({\n    name: 'getCode',\n    call: 'eth_getCode',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n  }), new Method({\n    name: 'getBlock',\n    call: blockCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, function (val) {\n      return !!val;\n    }],\n    outputFormatter: formatter.outputBlockFormatter\n  }), new Method({\n    name: 'getUncle',\n    call: uncleCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n    outputFormatter: formatter.outputBlockFormatter\n  }), new Method({\n    name: 'getBlockTransactionCount',\n    call: getBlockTransactionCountCall,\n    params: 1,\n    inputFormatter: [formatter.inputBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getBlockUncleCount',\n    call: uncleCountCall,\n    params: 1,\n    inputFormatter: [formatter.inputBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getTransaction',\n    call: 'eth_getTransactionByHash',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: formatter.outputTransactionFormatter\n  }), new Method({\n    name: 'getTransactionFromBlock',\n    call: transactionFromBlockCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n    outputFormatter: formatter.outputTransactionFormatter\n  }), new Method({\n    name: 'getTransactionReceipt',\n    call: 'eth_getTransactionReceipt',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: formatter.outputTransactionReceiptFormatter\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'sendSignedTransaction',\n    call: 'eth_sendRawTransaction',\n    params: 1,\n    inputFormatter: [null],\n    abiCoder: abi\n  }), new Method({\n    name: 'signTransaction',\n    call: 'eth_signTransaction',\n    params: 1,\n    inputFormatter: [formatter.inputTransactionFormatter]\n  }), new Method({\n    name: 'sendTransaction',\n    call: 'eth_sendTransaction',\n    params: 1,\n    inputFormatter: [formatter.inputTransactionFormatter],\n    abiCoder: abi\n  }), new Method({\n    name: 'sign',\n    call: 'eth_sign',\n    params: 2,\n    inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n    transformPayload: function (payload) {\n      payload.params.reverse();\n      return payload;\n    }\n  }), new Method({\n    name: 'call',\n    call: 'eth_call',\n    params: 2,\n    inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n    abiCoder: abi\n  }), new Method({\n    name: 'estimateGas',\n    call: 'eth_estimateGas',\n    params: 1,\n    inputFormatter: [formatter.inputCallFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'submitWork',\n    call: 'eth_submitWork',\n    params: 3\n  }), new Method({\n    name: 'getWork',\n    call: 'eth_getWork',\n    params: 0\n  }), new Method({\n    name: 'getPastLogs',\n    call: 'eth_getLogs',\n    params: 1,\n    inputFormatter: [formatter.inputLogFormatter],\n    outputFormatter: formatter.outputLogFormatter\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'requestAccounts',\n    call: 'eth_requestAccounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'getProof',\n    call: 'eth_getProof',\n    params: 3,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: formatter.outputProofFormatter\n  }), new Method({\n    name: 'getPendingTransactions',\n    call: 'eth_pendingTransactions',\n    params: 0,\n    outputFormatter: formatter.outputTransactionFormatter\n  }),\n  // subscriptions\n  new Subscriptions({\n    name: 'subscribe',\n    type: 'eth',\n    subscriptions: {\n      'newBlockHeaders': {\n        // TODO rename on RPC side?\n        subscriptionName: 'newHeads',\n        params: 0,\n        outputFormatter: formatter.outputBlockFormatter\n      },\n      'pendingTransactions': {\n        subscriptionName: 'newPendingTransactions',\n        params: 0\n      },\n      'logs': {\n        params: 1,\n        inputFormatter: [formatter.inputLogFormatter],\n        outputFormatter: formatter.outputLogFormatter,\n        // DUBLICATE, also in web3-eth-contract\n        subscriptionHandler: function (output) {\n          if (output.removed) {\n            this.emit('changed', output);\n          } else {\n            this.emit('data', output);\n          }\n          if (_.isFunction(this.callback)) {\n            this.callback(null, output, this);\n          }\n        }\n      },\n      'syncing': {\n        params: 0,\n        outputFormatter: formatter.outputSyncingFormatter,\n        subscriptionHandler: function (output) {\n          var _this = this;\n          // fire TRUE at start\n          if (this._isSyncing !== true) {\n            this._isSyncing = true;\n            this.emit('changed', _this._isSyncing);\n            if (_.isFunction(this.callback)) {\n              this.callback(null, _this._isSyncing, this);\n            }\n            setTimeout(function () {\n              _this.emit('data', output);\n              if (_.isFunction(_this.callback)) {\n                _this.callback(null, output, _this);\n              }\n            }, 0);\n            // fire sync status\n          } else {\n            this.emit('data', output);\n            if (_.isFunction(_this.callback)) {\n              this.callback(null, output, this);\n            }\n            // wait for some time before fireing the FALSE\n            clearTimeout(this._isSyncingTimeout);\n            this._isSyncingTimeout = setTimeout(function () {\n              if (output.currentBlock > output.highestBlock - 200) {\n                _this._isSyncing = false;\n                _this.emit('changed', _this._isSyncing);\n                if (_.isFunction(_this.callback)) {\n                  _this.callback(null, _this._isSyncing, _this);\n                }\n              }\n            }, 500);\n          }\n        }\n      }\n    }\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager, _this.accounts); // second param is the eth.accounts module (necessary for signing transactions locally)\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n    method.transactionBlockTimeout = _this.transactionBlockTimeout;\n    method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n    method.transactionPollingTimeout = _this.transactionPollingTimeout;\n    method.handleRevert = _this.handleRevert;\n  });\n};\n// Adds the static givenProvider and providers property to the Eth module\ncore.addProviders(Eth);\nmodule.exports = Eth;","map":{"version":3,"names":["_","require","core","helpers","Subscriptions","subscriptions","Method","utils","Net","ENS","Personal","BaseContract","Iban","Accounts","abi","getNetworkType","formatter","formatters","blockCall","args","isString","indexOf","transactionFromBlockCall","uncleCall","getBlockTransactionCountCall","uncleCountCall","Eth","_this","packageInit","arguments","setRequestManager","manager","net","personal","accounts","Contract","_requestManager","currentProvider","_provider","setProvider","apply","ens","_detectedAddress","_lastSyncCheck","handleRevert","defaultAccount","defaultBlock","transactionBlockTimeout","transactionConfirmationBlocks","transactionPollingTimeout","maxListenersWarningThreshold","defaultChain","defaultHardfork","defaultCommon","Object","defineProperty","get","set","val","methods","forEach","method","enumerable","toChecksumAddress","inputAddressFormatter","setMaxListeners","clearSubscriptions","bind","self","prototype","create","constructor","_ethAccounts","provider","name","call","params","outputFormatter","hexToNumber","outputSyncingFormatter","outputBigNumberFormatter","inputFormatter","inputDefaultBlockNumberFormatter","numberToHex","inputBlockNumberFormatter","outputBlockFormatter","outputTransactionFormatter","outputTransactionReceiptFormatter","abiCoder","inputTransactionFormatter","inputSignFormatter","transformPayload","payload","reverse","inputCallFormatter","inputLogFormatter","outputLogFormatter","inputStorageKeysFormatter","outputProofFormatter","type","subscriptionName","subscriptionHandler","output","removed","emit","isFunction","callback","_isSyncing","setTimeout","clearTimeout","_isSyncingTimeout","currentBlock","highestBlock","attachToObject","addProviders","module","exports"],"sources":["/Users/cpereira/Documents/GIT/Neo/neovest/neovest/node_modules/web3-eth/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar helpers = require('web3-core-helpers');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Net = require('web3-net');\nvar ENS = require('web3-eth-ens');\nvar Personal = require('web3-eth-personal');\nvar BaseContract = require('web3-eth-contract');\nvar Iban = require('web3-eth-iban');\nvar Accounts = require('web3-eth-accounts');\nvar abi = require('web3-eth-abi');\nvar getNetworkType = require('./getNetworkType.js');\nvar formatter = helpers.formatters;\nvar blockCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\nvar transactionFromBlockCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\nvar uncleCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\nvar getBlockTransactionCountCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\nvar uncleCountCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\nvar Eth = function Eth() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // overwrite package setRequestManager\n    var setRequestManager = this.setRequestManager;\n    this.setRequestManager = function (manager) {\n        setRequestManager(manager);\n        _this.net.setRequestManager(manager);\n        _this.personal.setRequestManager(manager);\n        _this.accounts.setRequestManager(manager);\n        _this.Contract._requestManager = _this._requestManager;\n        _this.Contract.currentProvider = _this._provider;\n        return true;\n    };\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n        _this.setRequestManager(_this._requestManager);\n        // Set detectedAddress/lastSyncCheck back to null because the provider could be connected to a different chain now\n        _this.ens._detectedAddress = null;\n        _this.ens._lastSyncCheck = null;\n    };\n    var handleRevert = false;\n    var defaultAccount = null;\n    var defaultBlock = 'latest';\n    var transactionBlockTimeout = 50;\n    var transactionConfirmationBlocks = 24;\n    var transactionPollingTimeout = 750;\n    var maxListenersWarningThreshold = 100;\n    var defaultChain, defaultHardfork, defaultCommon;\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            return handleRevert;\n        },\n        set: function (val) {\n            handleRevert = val;\n            // also set on the Contract object\n            _this.Contract.handleRevert = handleRevert;\n            // update handleRevert\n            methods.forEach(function (method) {\n                method.handleRevert = handleRevert;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return defaultCommon;\n        },\n        set: function (val) {\n            defaultCommon = val;\n            // also set on the Contract object\n            _this.Contract.defaultCommon = defaultCommon;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultCommon = defaultCommon;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return defaultHardfork;\n        },\n        set: function (val) {\n            defaultHardfork = val;\n            // also set on the Contract object\n            _this.Contract.defaultHardfork = defaultHardfork;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultHardfork = defaultHardfork;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return defaultChain;\n        },\n        set: function (val) {\n            defaultChain = val;\n            // also set on the Contract object\n            _this.Contract.defaultChain = defaultChain;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultChain = defaultChain;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            return transactionPollingTimeout;\n        },\n        set: function (val) {\n            transactionPollingTimeout = val;\n            // also set on the Contract object\n            _this.Contract.transactionPollingTimeout = transactionPollingTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionPollingTimeout = transactionPollingTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            return transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            transactionConfirmationBlocks = val;\n            // also set on the Contract object\n            _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            return transactionBlockTimeout;\n        },\n        set: function (val) {\n            transactionBlockTimeout = val;\n            // also set on the Contract object\n            _this.Contract.transactionBlockTimeout = transactionBlockTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionBlockTimeout = transactionBlockTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n            }\n            // also set on the Contract object\n            _this.Contract.defaultAccount = defaultAccount;\n            _this.personal.defaultAccount = defaultAccount;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultAccount = defaultAccount;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            // also set on the Contract object\n            _this.Contract.defaultBlock = defaultBlock;\n            _this.personal.defaultBlock = defaultBlock;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultBlock = defaultBlock;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'maxListenersWarningThreshold', {\n        get: function () {\n            return maxListenersWarningThreshold;\n        },\n        set: function (val) {\n            if (_this.currentProvider && _this.currentProvider.setMaxListeners) {\n                maxListenersWarningThreshold = val;\n                _this.currentProvider.setMaxListeners(val);\n            }\n        },\n        enumerable: true\n    });\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions.bind(_this._requestManager);\n    // add net\n    this.net = new Net(this);\n    // add chain detection\n    this.net.getNetworkType = getNetworkType.bind(this);\n    // add accounts\n    this.accounts = new Accounts(this);\n    // add personal\n    this.personal = new Personal(this);\n    this.personal.defaultAccount = this.defaultAccount;\n    // set warnings threshold\n    this.maxListenersWarningThreshold = maxListenersWarningThreshold;\n    // create a proxy Contract type for this instance, as a Contract's provider\n    // is stored as a class member rather than an instance variable. If we do\n    // not create this proxy type, changing the provider in one instance of\n    // web3-eth would subsequently change the provider for _all_ contract\n    // instances!\n    var self = this;\n    var Contract = function Contract() {\n        BaseContract.apply(this, arguments);\n        // when Eth.setProvider is called, call packageInit\n        // on all contract instances instantiated via this Eth\n        // instances. This will update the currentProvider for\n        // the contract instances\n        var _this = this;\n        var setProvider = self.setProvider;\n        self.setProvider = function () {\n            setProvider.apply(self, arguments);\n            core.packageInit(_this, [self]);\n        };\n    };\n    Contract.setProvider = function () {\n        BaseContract.setProvider.apply(this, arguments);\n    };\n    // make our proxy Contract inherit from web3-eth-contract so that it has all\n    // the right functionality and so that instanceof and friends work properly\n    Contract.prototype = Object.create(BaseContract.prototype);\n    Contract.prototype.constructor = Contract;\n    // add contract\n    this.Contract = Contract;\n    this.Contract.defaultAccount = this.defaultAccount;\n    this.Contract.defaultBlock = this.defaultBlock;\n    this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n    this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n    this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n    this.Contract.handleRevert = this.handleRevert;\n    this.Contract._requestManager = this._requestManager;\n    this.Contract._ethAccounts = this.accounts;\n    this.Contract.currentProvider = this._requestManager.provider;\n    // add IBAN\n    this.Iban = Iban;\n    // add ABI\n    this.abi = abi;\n    // add ENS\n    this.ens = new ENS(this);\n    var methods = [\n        new Method({\n            name: 'getNodeInfo',\n            call: 'web3_clientVersion'\n        }),\n        new Method({\n            name: 'getProtocolVersion',\n            call: 'eth_protocolVersion',\n            params: 0\n        }),\n        new Method({\n            name: 'getCoinbase',\n            call: 'eth_coinbase',\n            params: 0\n        }),\n        new Method({\n            name: 'isMining',\n            call: 'eth_mining',\n            params: 0\n        }),\n        new Method({\n            name: 'getHashrate',\n            call: 'eth_hashrate',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'isSyncing',\n            call: 'eth_syncing',\n            params: 0,\n            outputFormatter: formatter.outputSyncingFormatter\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0,\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getAccounts',\n            call: 'eth_accounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getBlockNumber',\n            call: 'eth_blockNumber',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBalance',\n            call: 'eth_getBalance',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getStorageAt',\n            call: 'eth_getStorageAt',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getCode',\n            call: 'eth_getCode',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getBlock',\n            call: blockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, function (val) { return !!val; }],\n            outputFormatter: formatter.outputBlockFormatter\n        }),\n        new Method({\n            name: 'getUncle',\n            call: uncleCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputBlockFormatter,\n        }),\n        new Method({\n            name: 'getBlockTransactionCount',\n            call: getBlockTransactionCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBlockUncleCount',\n            call: uncleCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getTransaction',\n            call: 'eth_getTransactionByHash',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionFromBlock',\n            call: transactionFromBlockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionReceipt',\n            call: 'eth_getTransactionReceipt',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionReceiptFormatter\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'sendSignedTransaction',\n            call: 'eth_sendRawTransaction',\n            params: 1,\n            inputFormatter: [null],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'signTransaction',\n            call: 'eth_signTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter]\n        }),\n        new Method({\n            name: 'sendTransaction',\n            call: 'eth_sendTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'sign',\n            call: 'eth_sign',\n            params: 2,\n            inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n            transformPayload: function (payload) {\n                payload.params.reverse();\n                return payload;\n            }\n        }),\n        new Method({\n            name: 'call',\n            call: 'eth_call',\n            params: 2,\n            inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'estimateGas',\n            call: 'eth_estimateGas',\n            params: 1,\n            inputFormatter: [formatter.inputCallFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'submitWork',\n            call: 'eth_submitWork',\n            params: 3\n        }),\n        new Method({\n            name: 'getWork',\n            call: 'eth_getWork',\n            params: 0\n        }),\n        new Method({\n            name: 'getPastLogs',\n            call: 'eth_getLogs',\n            params: 1,\n            inputFormatter: [formatter.inputLogFormatter],\n            outputFormatter: formatter.outputLogFormatter\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'requestAccounts',\n            call: 'eth_requestAccounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getProof',\n            call: 'eth_getProof',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputProofFormatter\n        }),\n        new Method({\n            name: 'getPendingTransactions',\n            call: 'eth_pendingTransactions',\n            params: 0,\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        // subscriptions\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'eth',\n            subscriptions: {\n                'newBlockHeaders': {\n                    // TODO rename on RPC side?\n                    subscriptionName: 'newHeads',\n                    params: 0,\n                    outputFormatter: formatter.outputBlockFormatter\n                },\n                'pendingTransactions': {\n                    subscriptionName: 'newPendingTransactions',\n                    params: 0\n                },\n                'logs': {\n                    params: 1,\n                    inputFormatter: [formatter.inputLogFormatter],\n                    outputFormatter: formatter.outputLogFormatter,\n                    // DUBLICATE, also in web3-eth-contract\n                    subscriptionHandler: function (output) {\n                        if (output.removed) {\n                            this.emit('changed', output);\n                        }\n                        else {\n                            this.emit('data', output);\n                        }\n                        if (_.isFunction(this.callback)) {\n                            this.callback(null, output, this);\n                        }\n                    }\n                },\n                'syncing': {\n                    params: 0,\n                    outputFormatter: formatter.outputSyncingFormatter,\n                    subscriptionHandler: function (output) {\n                        var _this = this;\n                        // fire TRUE at start\n                        if (this._isSyncing !== true) {\n                            this._isSyncing = true;\n                            this.emit('changed', _this._isSyncing);\n                            if (_.isFunction(this.callback)) {\n                                this.callback(null, _this._isSyncing, this);\n                            }\n                            setTimeout(function () {\n                                _this.emit('data', output);\n                                if (_.isFunction(_this.callback)) {\n                                    _this.callback(null, output, _this);\n                                }\n                            }, 0);\n                            // fire sync status\n                        }\n                        else {\n                            this.emit('data', output);\n                            if (_.isFunction(_this.callback)) {\n                                this.callback(null, output, this);\n                            }\n                            // wait for some time before fireing the FALSE\n                            clearTimeout(this._isSyncingTimeout);\n                            this._isSyncingTimeout = setTimeout(function () {\n                                if (output.currentBlock > output.highestBlock - 200) {\n                                    _this._isSyncing = false;\n                                    _this.emit('changed', _this._isSyncing);\n                                    if (_.isFunction(_this.callback)) {\n                                        _this.callback(null, _this._isSyncing, _this);\n                                    }\n                                }\n                            }, 500);\n                        }\n                    }\n                }\n            }\n        })\n    ];\n    methods.forEach(function (method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager, _this.accounts); // second param is the eth.accounts module (necessary for signing transactions locally)\n        method.defaultBlock = _this.defaultBlock;\n        method.defaultAccount = _this.defaultAccount;\n        method.transactionBlockTimeout = _this.transactionBlockTimeout;\n        method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n        method.transactionPollingTimeout = _this.transactionPollingTimeout;\n        method.handleRevert = _this.handleRevert;\n    });\n};\n// Adds the static givenProvider and providers property to the Eth module\ncore.addProviders(Eth);\nmodule.exports = Eth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}
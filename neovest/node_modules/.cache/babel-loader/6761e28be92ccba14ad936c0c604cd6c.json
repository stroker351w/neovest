{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar RLP = require('eth-lib/lib/rlp'); // jshint ignore:line\nvar Bytes = require('eth-lib/lib/bytes'); // jshint ignore:line\nvar cryp = typeof global === 'undefined' ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar Transaction = require('ethereumjs-tx').Transaction;\nvar Common = require('ethereumjs-common').default;\nvar isNot = function (value) {\n  return _.isUndefined(value) || _.isNull(value);\n};\nvar Accounts = function Accounts() {\n  var _this = this;\n  // sets _requestmanager\n  core.packageInit(this, arguments);\n  // remove unecessary core functions\n  delete this.BatchRequest;\n  delete this.extend;\n  var _ethereumCall = [new Method({\n    name: 'getNetworkId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: parseInt\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [function (address) {\n      if (utils.isAddress(address)) {\n        return address;\n      } else {\n        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n      }\n    }, function () {\n      return 'latest';\n    }]\n  })];\n  // attach methods to this._ethereumCall\n  this._ethereumCall = {};\n  _.each(_ethereumCall, function (method) {\n    method.attachToObject(_this._ethereumCall);\n    method.setRequestManager(_this._requestManager);\n  });\n  this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n  var _this = this;\n  // add sign functions\n  account.signTransaction = function signTransaction(tx, callback) {\n    return _this.signTransaction(tx, account.privateKey, callback);\n  };\n  account.sign = function sign(data) {\n    return _this.sign(data, account.privateKey);\n  };\n  account.encrypt = function encrypt(password, options) {\n    return _this.encrypt(account.privateKey, password, options);\n  };\n  return account;\n};\nAccounts.prototype.create = function create(entropy) {\n  return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  }\n  // 64 hex characters + hex-prefix\n  if (!ignoreLength && privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n  return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n  var _this = this,\n    error = false,\n    transactionOptions = {},\n    hasTxSigningOptions = !!(tx && (tx.chain && tx.hardfork || tx.common));\n  callback = callback || function () {};\n  if (!tx) {\n    error = new Error('No transaction object given!');\n    callback(error);\n    return Promise.reject(error);\n  }\n  function signed(tx) {\n    const error = _validateTransactionForSigning(tx);\n    if (error) {\n      callback(error);\n      return Promise.reject(error);\n    }\n    try {\n      var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n      transaction.to = transaction.to || '0x';\n      transaction.data = transaction.data || '0x';\n      transaction.value = transaction.value || '0x';\n      transaction.chainId = utils.numberToHex(transaction.chainId);\n      // Because tx has no ethereumjs-tx signing options we use fetched vals.\n      if (!hasTxSigningOptions) {\n        transactionOptions.common = Common.forCustomChain('mainnet', {\n          name: 'custom-network',\n          networkId: transaction.networkId,\n          chainId: transaction.chainId\n        }, 'petersburg');\n        delete transaction.networkId;\n      } else {\n        if (transaction.common) {\n          transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n            name: transaction.common.customChain.name || 'custom-network',\n            networkId: transaction.common.customChain.networkId,\n            chainId: transaction.common.customChain.chainId\n          }, transaction.common.hardfork || 'petersburg');\n          delete transaction.common;\n        }\n        if (transaction.chain) {\n          transactionOptions.chain = transaction.chain;\n          delete transaction.chain;\n        }\n        if (transaction.hardfork) {\n          transactionOptions.hardfork = transaction.hardfork;\n          delete transaction.hardfork;\n        }\n      }\n      if (privateKey.startsWith('0x')) {\n        privateKey = privateKey.substring(2);\n      }\n      var ethTx = new Transaction(transaction, transactionOptions);\n      ethTx.sign(Buffer.from(privateKey, 'hex'));\n      var validationResult = ethTx.validate(true);\n      if (validationResult !== '') {\n        throw new Error('Signer Error: ' + validationResult);\n      }\n      var rlpEncoded = ethTx.serialize().toString('hex');\n      var rawTransaction = '0x' + rlpEncoded;\n      var transactionHash = utils.keccak256(rawTransaction);\n      var result = {\n        messageHash: '0x' + Buffer.from(ethTx.hash(false)).toString('hex'),\n        v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n        r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n        s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n        rawTransaction: rawTransaction,\n        transactionHash: transactionHash\n      };\n      callback(null, result);\n      return result;\n    } catch (e) {\n      callback(e);\n      return Promise.reject(e);\n    }\n  }\n  // Resolve immediately if nonce, chainId, price and signing options are provided\n  if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n    return Promise.resolve(signed(tx));\n  }\n  // Otherwise, get the missing info from the Ethereum Node\n  return Promise.all([isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId, isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice, isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce, isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1]).then(function (args) {\n    if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n      throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n    }\n    return signed(_.extend(tx, {\n      chainId: args[0],\n      gasPrice: args[1],\n      nonce: args[2],\n      networkId: args[3]\n    }));\n  });\n};\nfunction _validateTransactionForSigning(tx) {\n  if (tx.common && tx.chain && tx.hardfork) {\n    return new Error('Please provide the ethereumjs-common object or the chain and hardfork property but not all together.');\n  }\n  if (tx.chain && !tx.hardfork || tx.hardfork && !tx.chain) {\n    return new Error('When specifying chain and hardfork, both values must be defined. ' + 'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n  }\n  if (!tx.gas && !tx.gasLimit) {\n    return new Error('\"gas\" is missing');\n  }\n  if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n    return new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n  }\n  return;\n}\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n  var values = RLP.decode(rawTx);\n  var signature = Account.encodeSignature(values.slice(6, 9));\n  var recovery = Bytes.toNumber(values[6]);\n  var extraData = recovery < 35 ? [] : [Bytes.fromNumber(recovery - 35 >> 1), '0x', '0x'];\n  var signingData = values.slice(0, 6).concat(extraData);\n  var signingDataHex = RLP.encode(signingData);\n  return Account.recover(Hash.keccak256(signingDataHex), signature);\n};\n/* jshint ignore:end */\nAccounts.prototype.hashMessage = function hashMessage(data) {\n  var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n  var messageBytes = utils.hexToBytes(messageHex);\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return Hash.keccak256s(ethMessage);\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  }\n  // 64 hex characters + hex-prefix\n  if (privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n  var hash = this.hashMessage(data);\n  var signature = Account.sign(hash, privateKey);\n  var vrs = Account.decodeSignature(signature);\n  return {\n    message: data,\n    messageHash: hash,\n    v: vrs[0],\n    r: vrs[1],\n    s: vrs[2],\n    signature: signature\n  };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n  var args = [].slice.apply(arguments);\n  if (_.isObject(message)) {\n    return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n  }\n  if (!preFixed) {\n    message = this.hashMessage(message);\n  }\n  if (args.length >= 4) {\n    preFixed = args.slice(-1)[0];\n    preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n    return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n  }\n  return Account.recover(message, signature);\n};\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n  /* jshint maxcomplexity: 10 */\n  if (!_.isString(password)) {\n    throw new Error('No password given.');\n  }\n  var json = _.isObject(v3Keystore) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n  if (json.version !== 3) {\n    throw new Error('Not a valid V3 wallet');\n  }\n  var derivedKey;\n  var kdfparams;\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams;\n    // FIXME: support progress reporting callback\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n  if (mac !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong password');\n  }\n  var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n  return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n  /* jshint maxcomplexity: 20 */\n  var account = this.privateKeyToAccount(privateKey, true);\n  options = options || {};\n  var salt = options.salt || cryp.randomBytes(32);\n  var iv = options.iv || cryp.randomBytes(16);\n  var derivedKey;\n  var kdf = options.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: options.dklen || 32,\n    salt: salt.toString('hex')\n  };\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = options.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n    kdfparams.r = options.r || 8;\n    kdfparams.p = options.p || 1;\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n  var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n  var ciphertext = Buffer.from([...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')), ...cipher.final()]);\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n  return {\n    version: 3,\n    id: uuid.v4({\n      random: options.uuid || cryp.randomBytes(16)\n    }),\n    address: account.address.toLowerCase().replace('0x', ''),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: options.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\nfunction Wallet(accounts) {\n  this._accounts = accounts;\n  this.length = 0;\n  this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n  pointer = pointer || 0;\n  if (_.has(this, pointer)) {\n    return this._findSafeIndex(pointer + 1);\n  } else {\n    return pointer;\n  }\n};\nWallet.prototype._currentIndexes = function () {\n  var keys = Object.keys(this);\n  var indexes = keys.map(function (key) {\n    return parseInt(key);\n  }).filter(function (n) {\n    return n < 9e20;\n  });\n  return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n  for (var i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy).privateKey);\n  }\n  return this;\n};\nWallet.prototype.add = function (account) {\n  if (_.isString(account)) {\n    account = this._accounts.privateKeyToAccount(account);\n  }\n  if (!this[account.address]) {\n    account = this._accounts.privateKeyToAccount(account.privateKey);\n    account.index = this._findSafeIndex();\n    this[account.index] = account;\n    this[account.address] = account;\n    this[account.address.toLowerCase()] = account;\n    this.length++;\n    return account;\n  } else {\n    return this[account.address];\n  }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n  var account = this[addressOrIndex];\n  if (account && account.address) {\n    // address\n    this[account.address].privateKey = null;\n    delete this[account.address];\n    // address lowercase\n    this[account.address.toLowerCase()].privateKey = null;\n    delete this[account.address.toLowerCase()];\n    // index\n    this[account.index].privateKey = null;\n    delete this[account.index];\n    this.length--;\n    return true;\n  } else {\n    return false;\n  }\n};\nWallet.prototype.clear = function () {\n  var _this = this;\n  var indexes = this._currentIndexes();\n  indexes.forEach(function (index) {\n    _this.remove(index);\n  });\n  return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n  var _this = this;\n  var indexes = this._currentIndexes();\n  var accounts = indexes.map(function (index) {\n    return _this[index].encrypt(password, options);\n  });\n  return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n  var _this = this;\n  encryptedWallet.forEach(function (keystore) {\n    var account = _this._accounts.decrypt(keystore, password);\n    if (account) {\n      _this.add(account);\n    } else {\n      throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n    }\n  });\n  return this;\n};\nWallet.prototype.save = function (password, keyName) {\n  localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n  return true;\n};\nWallet.prototype.load = function (password, keyName) {\n  var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n  if (keystore) {\n    try {\n      keystore = JSON.parse(keystore);\n    } catch (e) {}\n  }\n  return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n  delete Wallet.prototype.save;\n  delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n  var storage;\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && (\n    // everything except Firefox\n    e.code === 22 ||\n    // Firefox\n    e.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' ||\n    // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\nmodule.exports = Accounts;","map":{"version":3,"names":["_","require","core","Method","Account","Hash","RLP","Bytes","cryp","global","scrypt","uuid","utils","helpers","Transaction","Common","default","isNot","value","isUndefined","isNull","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","each","method","attachToObject","setRequestManager","_requestManager","wallet","Wallet","prototype","_addAccountFunctions","account","signTransaction","tx","callback","privateKey","sign","data","encrypt","password","options","create","entropy","randomHex","privateKeyToAccount","ignoreLength","startsWith","length","fromPrivate","error","transactionOptions","hasTxSigningOptions","chain","hardfork","common","Promise","reject","signed","_validateTransactionForSigning","transaction","formatters","inputCallFormatter","clone","to","chainId","numberToHex","forCustomChain","networkId","baseChain","customChain","substring","ethTx","Buffer","from","validationResult","validate","rlpEncoded","serialize","toString","rawTransaction","transactionHash","keccak256","result","messageHash","hash","v","r","s","e","nonce","undefined","gasPrice","resolve","all","getChainId","getGasPrice","getTransactionCount","getNetworkId","then","args","JSON","stringify","gas","gasLimit","recoverTransaction","rawTx","values","decode","signature","encodeSignature","slice","recovery","toNumber","extraData","fromNumber","signingData","concat","signingDataHex","encode","recover","hashMessage","messageHex","isHexStrict","utf8ToHex","messageBytes","hexToBytes","messageBuffer","preamble","preambleBuffer","ethMessage","keccak256s","vrs","decodeSignature","message","preFixed","apply","isObject","isBoolean","decrypt","v3Keystore","nonStrict","isString","json","parse","toLowerCase","version","derivedKey","kdfparams","crypto","kdf","syncScrypt","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","mac","sha3","replace","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","randomBytes","createCipheriv","id","v4","random","accounts","_accounts","defaultKeyName","_findSafeIndex","pointer","has","_currentIndexes","keys","Object","indexes","map","key","filter","numberOfAccounts","i","add","index","remove","addressOrIndex","clear","forEach","encryptedWallet","keystore","save","keyName","localStorage","setItem","load","getItem","storageAvailable","type","storage","window","x","removeItem","code","module","exports"],"sources":["/Users/cpereira/Documents/GIT/Neo/neovest/neovest/node_modules/web3-eth-accounts/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar RLP = require('eth-lib/lib/rlp'); // jshint ignore:line\nvar Bytes = require('eth-lib/lib/bytes'); // jshint ignore:line\nvar cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar Transaction = require('ethereumjs-tx').Transaction;\nvar Common = require('ethereumjs-common').default;\nvar isNot = function (value) {\n    return (_.isUndefined(value) || _.isNull(value));\n};\nvar Accounts = function Accounts() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function (address) {\n                    if (utils.isAddress(address)) {\n                        return address;\n                    }\n                    else {\n                        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                    }\n                }, function () {\n                    return 'latest';\n                }]\n        })\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _.each(_ethereumCall, function (method) {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n    this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n    var _this = this;\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n    return account;\n};\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (!ignoreLength && privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this, error = false, transactionOptions = {}, hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n    callback = callback || function () {\n    };\n    if (!tx) {\n        error = new Error('No transaction object given!');\n        callback(error);\n        return Promise.reject(error);\n    }\n    function signed(tx) {\n        const error = _validateTransactionForSigning(tx);\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n            transaction.to = transaction.to || '0x';\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.chainId = utils.numberToHex(transaction.chainId);\n            // Because tx has no ethereumjs-tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain('mainnet', {\n                    name: 'custom-network',\n                    networkId: transaction.networkId,\n                    chainId: transaction.chainId\n                }, 'petersburg');\n                delete transaction.networkId;\n            }\n            else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n                        name: transaction.common.customChain.name || 'custom-network',\n                        networkId: transaction.common.customChain.networkId,\n                        chainId: transaction.common.customChain.chainId\n                    }, transaction.common.hardfork || 'petersburg');\n                    delete transaction.common;\n                }\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n            var ethTx = new Transaction(transaction, transactionOptions);\n            ethTx.sign(Buffer.from(privateKey, 'hex'));\n            var validationResult = ethTx.validate(true);\n            if (validationResult !== '') {\n                throw new Error('Signer Error: ' + validationResult);\n            }\n            var rlpEncoded = ethTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n            var result = {\n                messageHash: '0x' + Buffer.from(ethTx.hash(false)).toString('hex'),\n                v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n            callback(null, result);\n            return result;\n        }\n        catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId,\n        isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice,\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1\n    ]).then(function (args) {\n        if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed(_.extend(tx, { chainId: args[0], gasPrice: args[1], nonce: args[2], networkId: args[3] }));\n    });\n};\nfunction _validateTransactionForSigning(tx) {\n    if (tx.common && (tx.chain && tx.hardfork)) {\n        return new Error('Please provide the ethereumjs-common object or the chain and hardfork property but not all together.');\n    }\n    if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n        return new Error('When specifying chain and hardfork, both values must be defined. ' +\n            'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n    }\n    if (!tx.gas && !tx.gasLimit) {\n        return new Error('\"gas\" is missing');\n    }\n    if (tx.nonce < 0 ||\n        tx.gas < 0 ||\n        tx.gasPrice < 0 ||\n        tx.chainId < 0) {\n        return new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n    }\n    return;\n}\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n    var values = RLP.decode(rawTx);\n    var signature = Account.encodeSignature(values.slice(6, 9));\n    var recovery = Bytes.toNumber(values[6]);\n    var extraData = recovery < 35 ? [] : [Bytes.fromNumber((recovery - 35) >> 1), '0x', '0x'];\n    var signingData = values.slice(0, 6).concat(extraData);\n    var signingDataHex = RLP.encode(signingData);\n    return Account.recover(Hash.keccak256(signingDataHex), signature);\n};\n/* jshint ignore:end */\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n    var messageBytes = utils.hexToBytes(messageHex);\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return Hash.keccak256s(ethMessage);\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n    if (_.isObject(message)) {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n    if (!_.isString(password)) {\n        throw new Error('No password given.');\n    }\n    var json = (_.isObject(v3Keystore)) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n    return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey, true);\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else {\n        throw new Error('Unsupported kdf');\n    }\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n    var ciphertext = Buffer.from([\n        ...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')),\n        ...cipher.final()\n    ]);\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    return {\n        version: 3,\n        id: uuid.v4({ random: options.uuid || cryp.randomBytes(16) }),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n    pointer = pointer || 0;\n    if (_.has(this, pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    }\n    else {\n        return pointer;\n    }\n};\nWallet.prototype._currentIndexes = function () {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function (key) {\n        return parseInt(key);\n    })\n        .filter(function (n) {\n        return (n < 9e20);\n    });\n    return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\nWallet.prototype.add = function (account) {\n    if (_.isString(account)) {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n        this.length++;\n        return account;\n    }\n    else {\n        return this[account.address];\n    }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n    var account = this[addressOrIndex];\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        this[account.address.toLowerCase()].privateKey = null;\n        delete this[account.address.toLowerCase()];\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n        this.length--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nWallet.prototype.clear = function () {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    indexes.forEach(function (index) {\n        _this.remove(index);\n    });\n    return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    var accounts = indexes.map(function (index) {\n        return _this[index].encrypt(password, options);\n    });\n    return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n    var _this = this;\n    encryptedWallet.forEach(function (keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n        if (account) {\n            _this.add(account);\n        }\n        else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n    return this;\n};\nWallet.prototype.save = function (password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n    return true;\n};\nWallet.prototype.load = function (password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        }\n        catch (e) {\n        }\n    }\n    return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch (e) {\n        return e && (\n        // everything except Firefox\n        e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\nmodule.exports = Accounts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}